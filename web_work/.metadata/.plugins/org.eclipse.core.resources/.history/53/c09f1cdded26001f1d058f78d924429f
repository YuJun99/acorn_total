package test.member.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.List;

import test.member.dto.MemberDto;
import test.util.DbcpBean;

public class MemberDao {
	
	//회원 정보를 DB에 저장하고 작업 성공 여부를 리턴하는 메소드
	public boolean insert(MemberDto dto) {
		List<MemberDto> list = new ArrayList<MemberDto>();
		
		Connection conn = null;
		PreparedStatement pstmt = null;
		ResultSet rs = null;
		try {
			//Connection 객체의 참조값
			conn = new DbcpBean().getConn();
			String sql = "INSERT INTO MEMBER(NUM, NAME, ADDR)"
					+ " VALUES(MEMBER_SEQ.NEXTVAL, ?, ?)";
			pstmt = conn.prepareStatement(sql);
			pstmt.setString(1, dto.getName());
			pstmt.setString(2, dto.getAddr());
			rs = pstmt.executeQuery();
			
			list.add(dto);
			
		}catch(Exception e) {
			e.printStackTrace();
		}finally {
			try {
				if(rs != null)rs.close();
				if(conn != null)conn.close();
				if(pstmt != null)pstmt.close();
			}catch(Exception e) {}
		}
		return false;
	}
	
	//회원 목록을 리턴하는 메소드 Data Access Object
	public List<MemberDto> getList() {
		//회원정보를 누적할 ArrayList 객체 생성
		List<MemberDto> list = new ArrayList<MemberDto>();
		
		Connection conn = null;
		PreparedStatement pstmt = null;
		ResultSet rs = null;
		try {
			//Connection 객체의 참조값
			conn = new DbcpBean().getConn();
			String sql = "SELECT NUM, NAME, ADDR"
					+ " FROM MEMBER"
					+ " ORDER BY NUM ASC";
			pstmt = conn.prepareStatement(sql);
			rs = pstmt.executeQuery();
			while(rs.next()) {
				//select 된 회원 정보를 MemberDto 객체에 담고
				MemberDto dto = new MemberDto();
				dto.setNum(rs.getInt("NUM"));
				dto.setName(rs.getString("NAME"));
				dto.setAddr(rs.getString("ADDR"));
				//MemberDto 객체를 List 에 누적 시킨다.
				list.add(dto);
			}
		}catch(Exception e) {
			e.printStackTrace();
		}finally {
			try {
				if(rs != null)rs.close();
				if(conn != null)conn.close();
				if(pstmt != null)pstmt.close();
			}catch(Exception e) {}
		}
		return list;
	}
}
